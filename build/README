TESTS avec r.js :
################
Test de minification avec le binaire r.js de requireJS
../../../../node_modules/gulp-requirejs/node_modules/requirejs/bin/r.js -o gulpfile-r.js 

Installation des dependances NodeJS :
#####################################
!!! 
installation de nodejs à prévoir
cf. http://openclassrooms.com/courses/des-applications-ultra-rapides-avec-node-js/installer-node-js
Sous debian, il faut installer le package nodejs-legacy, ce qui permet d'avoir le lien symbolique nodejs -> node
!!!
npm avec package.json + .npmrc pour le proxy
> npm install

Installation des dependances JS du projet :
###########################################
!!! 
installation à prévoir :
> sudo npm install -g bower
!!!
bower avec bower.json + .bowerrc pour le proxy
> bower install 

Utilisation de GULP :
#####################
!!! 
installation à prévoir :
> sudo npm install -g gulp 
!!!

> gulp --gulpfile gulpfile-r.js (test)
ou 
(par defaut, gulpfile.js)
> gulp 

Resultats :
###########
options de deploiement :

--test    : execution des tests avec Jasmine
--samples : possibilité de deployer des exemples
--check   : controle des JS du projet
--dev     : simple copie des sources
          sinon, on est en mode minification, et aggregation des sources

les ressources externes (ex. jquery) ne sont pas concaténées aux sources...

/*
 * Script d'optimisation des JS dans un projet sous RequireJS.
 * Les JS et les CSS sont minifiés puis mergés dans le repertoire : 
 *  ./build/js/
 *  
 * Les ressources minimales pour le fonctionnement du site sont :
 *       build/
 *       ├── js/
 *       │   ├── cfg/
 *       │   │   └── config.js
 *       │   ├── external/
 *       │   │   └── *.js
 *       │   ├── thirdparty/
 *       │   │   └── *.*
 *       │   ├── main.css
 *       │   ├── main.js
 *       │   └── modules/
 *       │       ├── style/
 *       │           └── *.css
 *       │       └── img/
 *       │           └── *.png
 *       ├── samples/
 *       └── template.html
 *
 */

Doc :
#####

cf. commande BOWER
http://bower.io/

cf. commande NPM
https://docs.npmjs.com/

JSDoc :
#######

manuel 
dans ./build/
> jsdoc -c jsdoc.json
ou
> gulp --doc

au préalable, 
> npm install jsdoc
> npm install ink-docstrap

Integration dans MAVEN :
########################
pilote les actions sur les JS suivantes :
- gestion des dependances (npm et bower)
- multi environnement
- licences
- packaging 
...

utilisation du plugin 
https://github.com/eirslett/frontend-maven-plugin
> run npm, bower, gulp
> possibilité d'installer node et npm ?

